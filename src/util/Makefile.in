# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
EXTRA_PROGRAMS = fastaclean$(EXEEXT) fastaclip$(EXEEXT) \
	fastachecksum$(EXEEXT) fastacomposition$(EXEEXT) \
	fastadiff$(EXEEXT) fastaexplode$(EXEEXT) fastafetch$(EXEEXT) \
	fastahardmask$(EXEEXT) fastaindex$(EXEEXT) \
	fastalength$(EXEEXT) fastanrdb$(EXEEXT) fastaoverlap$(EXEEXT) \
	fastareformat$(EXEEXT) fastaremove$(EXEEXT) \
	fastarevcomp$(EXEEXT) fastasoftmask$(EXEEXT) \
	fastasort$(EXEEXT) fastasplit$(EXEEXT) fastasubseq$(EXEEXT) \
	fastatranslate$(EXEEXT) fastavalidcds$(EXEEXT) \
	fasta2esd$(EXEEXT) fastaannotatecdna$(EXEEXT) esd2esi$(EXEEXT)
subdir = src/util
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_esd2esi_OBJECTS = esd2esi.$(OBJEXT)
esd2esi_OBJECTS = $(am_esd2esi_OBJECTS)
am__DEPENDENCIES_1 = $(top_srcdir)/src/sequence/sequence.o \
	$(top_srcdir)/src/sequence/alphabet.o \
	$(top_srcdir)/src/sequence/splice.o \
	$(top_srcdir)/src/sequence/translate.o \
	$(top_srcdir)/src/database/fastadb.o \
	$(top_srcdir)/src/general/argument.o \
	$(top_srcdir)/src/general/compoundfile.o \
	$(top_srcdir)/src/general/lineparse.o \
	$(top_srcdir)/src/struct/sparsecache.o \
	$(top_srcdir)/src/struct/matrix.o
esd2esi_DEPENDENCIES = $(top_srcdir)/src/database/dataset.o \
	$(top_srcdir)/src/database/index.o \
	$(top_srcdir)/src/struct/bitarray.o \
	$(top_srcdir)/src/struct/vfsm.o \
	$(top_srcdir)/src/struct/pqueue.o \
	$(top_srcdir)/src/struct/recyclebin.o \
	$(top_srcdir)/src/struct/rangetree.o \
	$(top_srcdir)/src/struct/noitree.o \
	$(top_srcdir)/src/struct/splaytree.o \
	$(top_srcdir)/src/sequence/submat.o \
	$(top_srcdir)/src/sequence/codonsubmat.o \
	$(top_srcdir)/src/comparison/wordhood.o \
	$(top_srcdir)/src/comparison/hspset.o \
	$(top_srcdir)/src/comparison/match.o $(am__DEPENDENCIES_1)
am_fasta2esd_OBJECTS = fasta2esd.$(OBJEXT)
fasta2esd_OBJECTS = $(am_fasta2esd_OBJECTS)
fasta2esd_DEPENDENCIES = $(top_srcdir)/src/database/dataset.o \
	$(top_srcdir)/src/struct/bitarray.o $(am__DEPENDENCIES_1)
am_fastaannotatecdna_OBJECTS = fastaannotatecdna.$(OBJEXT)
fastaannotatecdna_OBJECTS = $(am_fastaannotatecdna_OBJECTS)
fastaannotatecdna_LDADD = $(LDADD)
fastaannotatecdna_DEPENDENCIES =  \
	$(top_srcdir)/src/sequence/sequence.o \
	$(top_srcdir)/src/sequence/alphabet.o \
	$(top_srcdir)/src/sequence/splice.o \
	$(top_srcdir)/src/sequence/translate.o \
	$(top_srcdir)/src/database/fastadb.o \
	$(top_srcdir)/src/general/argument.o \
	$(top_srcdir)/src/general/compoundfile.o \
	$(top_srcdir)/src/general/lineparse.o \
	$(top_srcdir)/src/struct/sparsecache.o \
	$(top_srcdir)/src/struct/matrix.o
am_fastachecksum_OBJECTS = fastachecksum.$(OBJEXT)
fastachecksum_OBJECTS = $(am_fastachecksum_OBJECTS)
fastachecksum_LDADD = $(LDADD)
fastachecksum_DEPENDENCIES = $(top_srcdir)/src/sequence/sequence.o \
	$(top_srcdir)/src/sequence/alphabet.o \
	$(top_srcdir)/src/sequence/splice.o \
	$(top_srcdir)/src/sequence/translate.o \
	$(top_srcdir)/src/database/fastadb.o \
	$(top_srcdir)/src/general/argument.o \
	$(top_srcdir)/src/general/compoundfile.o \
	$(top_srcdir)/src/general/lineparse.o \
	$(top_srcdir)/src/struct/sparsecache.o \
	$(top_srcdir)/src/struct/matrix.o
am_fastaclean_OBJECTS = fastaclean.$(OBJEXT)
fastaclean_OBJECTS = $(am_fastaclean_OBJECTS)
fastaclean_LDADD = $(LDADD)
fastaclean_DEPENDENCIES = $(top_srcdir)/src/sequence/sequence.o \
	$(top_srcdir)/src/sequence/alphabet.o \
	$(top_srcdir)/src/sequence/splice.o \
	$(top_srcdir)/src/sequence/translate.o \
	$(top_srcdir)/src/database/fastadb.o \
	$(top_srcdir)/src/general/argument.o \
	$(top_srcdir)/src/general/compoundfile.o \
	$(top_srcdir)/src/general/lineparse.o \
	$(top_srcdir)/src/struct/sparsecache.o \
	$(top_srcdir)/src/struct/matrix.o
am_fastaclip_OBJECTS = fastaclip.$(OBJEXT)
fastaclip_OBJECTS = $(am_fastaclip_OBJECTS)
fastaclip_LDADD = $(LDADD)
fastaclip_DEPENDENCIES = $(top_srcdir)/src/sequence/sequence.o \
	$(top_srcdir)/src/sequence/alphabet.o \
	$(top_srcdir)/src/sequence/splice.o \
	$(top_srcdir)/src/sequence/translate.o \
	$(top_srcdir)/src/database/fastadb.o \
	$(top_srcdir)/src/general/argument.o \
	$(top_srcdir)/src/general/compoundfile.o \
	$(top_srcdir)/src/general/lineparse.o \
	$(top_srcdir)/src/struct/sparsecache.o \
	$(top_srcdir)/src/struct/matrix.o
am_fastacomposition_OBJECTS = fastacomposition.$(OBJEXT)
fastacomposition_OBJECTS = $(am_fastacomposition_OBJECTS)
fastacomposition_LDADD = $(LDADD)
fastacomposition_DEPENDENCIES = $(top_srcdir)/src/sequence/sequence.o \
	$(top_srcdir)/src/sequence/alphabet.o \
	$(top_srcdir)/src/sequence/splice.o \
	$(top_srcdir)/src/sequence/translate.o \
	$(top_srcdir)/src/database/fastadb.o \
	$(top_srcdir)/src/general/argument.o \
	$(top_srcdir)/src/general/compoundfile.o \
	$(top_srcdir)/src/general/lineparse.o \
	$(top_srcdir)/src/struct/sparsecache.o \
	$(top_srcdir)/src/struct/matrix.o
am_fastadiff_OBJECTS = fastadiff.$(OBJEXT)
fastadiff_OBJECTS = $(am_fastadiff_OBJECTS)
fastadiff_LDADD = $(LDADD)
fastadiff_DEPENDENCIES = $(top_srcdir)/src/sequence/sequence.o \
	$(top_srcdir)/src/sequence/alphabet.o \
	$(top_srcdir)/src/sequence/splice.o \
	$(top_srcdir)/src/sequence/translate.o \
	$(top_srcdir)/src/database/fastadb.o \
	$(top_srcdir)/src/general/argument.o \
	$(top_srcdir)/src/general/compoundfile.o \
	$(top_srcdir)/src/general/lineparse.o \
	$(top_srcdir)/src/struct/sparsecache.o \
	$(top_srcdir)/src/struct/matrix.o
am_fastaexplode_OBJECTS = fastaexplode.$(OBJEXT)
fastaexplode_OBJECTS = $(am_fastaexplode_OBJECTS)
fastaexplode_LDADD = $(LDADD)
fastaexplode_DEPENDENCIES = $(top_srcdir)/src/sequence/sequence.o \
	$(top_srcdir)/src/sequence/alphabet.o \
	$(top_srcdir)/src/sequence/splice.o \
	$(top_srcdir)/src/sequence/translate.o \
	$(top_srcdir)/src/database/fastadb.o \
	$(top_srcdir)/src/general/argument.o \
	$(top_srcdir)/src/general/compoundfile.o \
	$(top_srcdir)/src/general/lineparse.o \
	$(top_srcdir)/src/struct/sparsecache.o \
	$(top_srcdir)/src/struct/matrix.o
am_fastafetch_OBJECTS = fastafetch.$(OBJEXT)
fastafetch_OBJECTS = $(am_fastafetch_OBJECTS)
fastafetch_LDADD = $(LDADD)
fastafetch_DEPENDENCIES = $(top_srcdir)/src/sequence/sequence.o \
	$(top_srcdir)/src/sequence/alphabet.o \
	$(top_srcdir)/src/sequence/splice.o \
	$(top_srcdir)/src/sequence/translate.o \
	$(top_srcdir)/src/database/fastadb.o \
	$(top_srcdir)/src/general/argument.o \
	$(top_srcdir)/src/general/compoundfile.o \
	$(top_srcdir)/src/general/lineparse.o \
	$(top_srcdir)/src/struct/sparsecache.o \
	$(top_srcdir)/src/struct/matrix.o
am_fastahardmask_OBJECTS = fastahardmask.$(OBJEXT)
fastahardmask_OBJECTS = $(am_fastahardmask_OBJECTS)
fastahardmask_LDADD = $(LDADD)
fastahardmask_DEPENDENCIES = $(top_srcdir)/src/sequence/sequence.o \
	$(top_srcdir)/src/sequence/alphabet.o \
	$(top_srcdir)/src/sequence/splice.o \
	$(top_srcdir)/src/sequence/translate.o \
	$(top_srcdir)/src/database/fastadb.o \
	$(top_srcdir)/src/general/argument.o \
	$(top_srcdir)/src/general/compoundfile.o \
	$(top_srcdir)/src/general/lineparse.o \
	$(top_srcdir)/src/struct/sparsecache.o \
	$(top_srcdir)/src/struct/matrix.o
am_fastaindex_OBJECTS = fastaindex.$(OBJEXT)
fastaindex_OBJECTS = $(am_fastaindex_OBJECTS)
fastaindex_LDADD = $(LDADD)
fastaindex_DEPENDENCIES = $(top_srcdir)/src/sequence/sequence.o \
	$(top_srcdir)/src/sequence/alphabet.o \
	$(top_srcdir)/src/sequence/splice.o \
	$(top_srcdir)/src/sequence/translate.o \
	$(top_srcdir)/src/database/fastadb.o \
	$(top_srcdir)/src/general/argument.o \
	$(top_srcdir)/src/general/compoundfile.o \
	$(top_srcdir)/src/general/lineparse.o \
	$(top_srcdir)/src/struct/sparsecache.o \
	$(top_srcdir)/src/struct/matrix.o
am_fastalength_OBJECTS = fastalength.$(OBJEXT)
fastalength_OBJECTS = $(am_fastalength_OBJECTS)
fastalength_LDADD = $(LDADD)
fastalength_DEPENDENCIES = $(top_srcdir)/src/sequence/sequence.o \
	$(top_srcdir)/src/sequence/alphabet.o \
	$(top_srcdir)/src/sequence/splice.o \
	$(top_srcdir)/src/sequence/translate.o \
	$(top_srcdir)/src/database/fastadb.o \
	$(top_srcdir)/src/general/argument.o \
	$(top_srcdir)/src/general/compoundfile.o \
	$(top_srcdir)/src/general/lineparse.o \
	$(top_srcdir)/src/struct/sparsecache.o \
	$(top_srcdir)/src/struct/matrix.o
am_fastanrdb_OBJECTS = fastanrdb.$(OBJEXT)
fastanrdb_OBJECTS = $(am_fastanrdb_OBJECTS)
fastanrdb_LDADD = $(LDADD)
fastanrdb_DEPENDENCIES = $(top_srcdir)/src/sequence/sequence.o \
	$(top_srcdir)/src/sequence/alphabet.o \
	$(top_srcdir)/src/sequence/splice.o \
	$(top_srcdir)/src/sequence/translate.o \
	$(top_srcdir)/src/database/fastadb.o \
	$(top_srcdir)/src/general/argument.o \
	$(top_srcdir)/src/general/compoundfile.o \
	$(top_srcdir)/src/general/lineparse.o \
	$(top_srcdir)/src/struct/sparsecache.o \
	$(top_srcdir)/src/struct/matrix.o
am_fastaoverlap_OBJECTS = fastaoverlap.$(OBJEXT)
fastaoverlap_OBJECTS = $(am_fastaoverlap_OBJECTS)
fastaoverlap_LDADD = $(LDADD)
fastaoverlap_DEPENDENCIES = $(top_srcdir)/src/sequence/sequence.o \
	$(top_srcdir)/src/sequence/alphabet.o \
	$(top_srcdir)/src/sequence/splice.o \
	$(top_srcdir)/src/sequence/translate.o \
	$(top_srcdir)/src/database/fastadb.o \
	$(top_srcdir)/src/general/argument.o \
	$(top_srcdir)/src/general/compoundfile.o \
	$(top_srcdir)/src/general/lineparse.o \
	$(top_srcdir)/src/struct/sparsecache.o \
	$(top_srcdir)/src/struct/matrix.o
am_fastareformat_OBJECTS = fastareformat.$(OBJEXT)
fastareformat_OBJECTS = $(am_fastareformat_OBJECTS)
fastareformat_LDADD = $(LDADD)
fastareformat_DEPENDENCIES = $(top_srcdir)/src/sequence/sequence.o \
	$(top_srcdir)/src/sequence/alphabet.o \
	$(top_srcdir)/src/sequence/splice.o \
	$(top_srcdir)/src/sequence/translate.o \
	$(top_srcdir)/src/database/fastadb.o \
	$(top_srcdir)/src/general/argument.o \
	$(top_srcdir)/src/general/compoundfile.o \
	$(top_srcdir)/src/general/lineparse.o \
	$(top_srcdir)/src/struct/sparsecache.o \
	$(top_srcdir)/src/struct/matrix.o
am_fastaremove_OBJECTS = fastaremove.$(OBJEXT)
fastaremove_OBJECTS = $(am_fastaremove_OBJECTS)
fastaremove_LDADD = $(LDADD)
fastaremove_DEPENDENCIES = $(top_srcdir)/src/sequence/sequence.o \
	$(top_srcdir)/src/sequence/alphabet.o \
	$(top_srcdir)/src/sequence/splice.o \
	$(top_srcdir)/src/sequence/translate.o \
	$(top_srcdir)/src/database/fastadb.o \
	$(top_srcdir)/src/general/argument.o \
	$(top_srcdir)/src/general/compoundfile.o \
	$(top_srcdir)/src/general/lineparse.o \
	$(top_srcdir)/src/struct/sparsecache.o \
	$(top_srcdir)/src/struct/matrix.o
am_fastarevcomp_OBJECTS = fastarevcomp.$(OBJEXT)
fastarevcomp_OBJECTS = $(am_fastarevcomp_OBJECTS)
fastarevcomp_LDADD = $(LDADD)
fastarevcomp_DEPENDENCIES = $(top_srcdir)/src/sequence/sequence.o \
	$(top_srcdir)/src/sequence/alphabet.o \
	$(top_srcdir)/src/sequence/splice.o \
	$(top_srcdir)/src/sequence/translate.o \
	$(top_srcdir)/src/database/fastadb.o \
	$(top_srcdir)/src/general/argument.o \
	$(top_srcdir)/src/general/compoundfile.o \
	$(top_srcdir)/src/general/lineparse.o \
	$(top_srcdir)/src/struct/sparsecache.o \
	$(top_srcdir)/src/struct/matrix.o
am_fastasoftmask_OBJECTS = fastasoftmask.$(OBJEXT)
fastasoftmask_OBJECTS = $(am_fastasoftmask_OBJECTS)
fastasoftmask_LDADD = $(LDADD)
fastasoftmask_DEPENDENCIES = $(top_srcdir)/src/sequence/sequence.o \
	$(top_srcdir)/src/sequence/alphabet.o \
	$(top_srcdir)/src/sequence/splice.o \
	$(top_srcdir)/src/sequence/translate.o \
	$(top_srcdir)/src/database/fastadb.o \
	$(top_srcdir)/src/general/argument.o \
	$(top_srcdir)/src/general/compoundfile.o \
	$(top_srcdir)/src/general/lineparse.o \
	$(top_srcdir)/src/struct/sparsecache.o \
	$(top_srcdir)/src/struct/matrix.o
am_fastasort_OBJECTS = fastasort.$(OBJEXT)
fastasort_OBJECTS = $(am_fastasort_OBJECTS)
fastasort_LDADD = $(LDADD)
fastasort_DEPENDENCIES = $(top_srcdir)/src/sequence/sequence.o \
	$(top_srcdir)/src/sequence/alphabet.o \
	$(top_srcdir)/src/sequence/splice.o \
	$(top_srcdir)/src/sequence/translate.o \
	$(top_srcdir)/src/database/fastadb.o \
	$(top_srcdir)/src/general/argument.o \
	$(top_srcdir)/src/general/compoundfile.o \
	$(top_srcdir)/src/general/lineparse.o \
	$(top_srcdir)/src/struct/sparsecache.o \
	$(top_srcdir)/src/struct/matrix.o
am_fastasplit_OBJECTS = fastasplit.$(OBJEXT)
fastasplit_OBJECTS = $(am_fastasplit_OBJECTS)
fastasplit_LDADD = $(LDADD)
fastasplit_DEPENDENCIES = $(top_srcdir)/src/sequence/sequence.o \
	$(top_srcdir)/src/sequence/alphabet.o \
	$(top_srcdir)/src/sequence/splice.o \
	$(top_srcdir)/src/sequence/translate.o \
	$(top_srcdir)/src/database/fastadb.o \
	$(top_srcdir)/src/general/argument.o \
	$(top_srcdir)/src/general/compoundfile.o \
	$(top_srcdir)/src/general/lineparse.o \
	$(top_srcdir)/src/struct/sparsecache.o \
	$(top_srcdir)/src/struct/matrix.o
am_fastasubseq_OBJECTS = fastasubseq.$(OBJEXT)
fastasubseq_OBJECTS = $(am_fastasubseq_OBJECTS)
fastasubseq_LDADD = $(LDADD)
fastasubseq_DEPENDENCIES = $(top_srcdir)/src/sequence/sequence.o \
	$(top_srcdir)/src/sequence/alphabet.o \
	$(top_srcdir)/src/sequence/splice.o \
	$(top_srcdir)/src/sequence/translate.o \
	$(top_srcdir)/src/database/fastadb.o \
	$(top_srcdir)/src/general/argument.o \
	$(top_srcdir)/src/general/compoundfile.o \
	$(top_srcdir)/src/general/lineparse.o \
	$(top_srcdir)/src/struct/sparsecache.o \
	$(top_srcdir)/src/struct/matrix.o
am_fastatranslate_OBJECTS = fastatranslate.$(OBJEXT)
fastatranslate_OBJECTS = $(am_fastatranslate_OBJECTS)
fastatranslate_LDADD = $(LDADD)
fastatranslate_DEPENDENCIES = $(top_srcdir)/src/sequence/sequence.o \
	$(top_srcdir)/src/sequence/alphabet.o \
	$(top_srcdir)/src/sequence/splice.o \
	$(top_srcdir)/src/sequence/translate.o \
	$(top_srcdir)/src/database/fastadb.o \
	$(top_srcdir)/src/general/argument.o \
	$(top_srcdir)/src/general/compoundfile.o \
	$(top_srcdir)/src/general/lineparse.o \
	$(top_srcdir)/src/struct/sparsecache.o \
	$(top_srcdir)/src/struct/matrix.o
fastavalidcds_SOURCES = fastavalidcds.c
fastavalidcds_OBJECTS = fastavalidcds.$(OBJEXT)
fastavalidcds_LDADD = $(LDADD)
fastavalidcds_DEPENDENCIES = $(top_srcdir)/src/sequence/sequence.o \
	$(top_srcdir)/src/sequence/alphabet.o \
	$(top_srcdir)/src/sequence/splice.o \
	$(top_srcdir)/src/sequence/translate.o \
	$(top_srcdir)/src/database/fastadb.o \
	$(top_srcdir)/src/general/argument.o \
	$(top_srcdir)/src/general/compoundfile.o \
	$(top_srcdir)/src/general/lineparse.o \
	$(top_srcdir)/src/struct/sparsecache.o \
	$(top_srcdir)/src/struct/matrix.o
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(esd2esi_SOURCES) $(fasta2esd_SOURCES) \
	$(fastaannotatecdna_SOURCES) $(fastachecksum_SOURCES) \
	$(fastaclean_SOURCES) $(fastaclip_SOURCES) \
	$(fastacomposition_SOURCES) $(fastadiff_SOURCES) \
	$(fastaexplode_SOURCES) $(fastafetch_SOURCES) \
	$(fastahardmask_SOURCES) $(fastaindex_SOURCES) \
	$(fastalength_SOURCES) $(fastanrdb_SOURCES) \
	$(fastaoverlap_SOURCES) $(fastareformat_SOURCES) \
	$(fastaremove_SOURCES) $(fastarevcomp_SOURCES) \
	$(fastasoftmask_SOURCES) $(fastasort_SOURCES) \
	$(fastasplit_SOURCES) $(fastasubseq_SOURCES) \
	$(fastatranslate_SOURCES) $(EXTRA_fastavalidcds_SOURCES) \
	fastavalidcds.c
DIST_SOURCES = $(esd2esi_SOURCES) $(fasta2esd_SOURCES) \
	$(fastaannotatecdna_SOURCES) $(fastachecksum_SOURCES) \
	$(fastaclean_SOURCES) $(fastaclip_SOURCES) \
	$(fastacomposition_SOURCES) $(fastadiff_SOURCES) \
	$(fastaexplode_SOURCES) $(fastafetch_SOURCES) \
	$(fastahardmask_SOURCES) $(fastaindex_SOURCES) \
	$(fastalength_SOURCES) $(fastanrdb_SOURCES) \
	$(fastaoverlap_SOURCES) $(fastareformat_SOURCES) \
	$(fastaremove_SOURCES) $(fastarevcomp_SOURCES) \
	$(fastasoftmask_SOURCES) $(fastasort_SOURCES) \
	$(fastasplit_SOURCES) $(fastasubseq_SOURCES) \
	$(fastatranslate_SOURCES) $(EXTRA_fastavalidcds_SOURCES) \
	fastavalidcds.c
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GLIB_CONFIG = @GLIB_CONFIG@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
codegen_extra_ldadd = @codegen_extra_ldadd@
codegen_extra_sources = @codegen_extra_sources@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
glib_cflags = @glib_cflags@
glib_libs = @glib_libs@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
installed_util_list = @installed_util_list@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
source_root_dir = @source_root_dir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
use_pthreads = @use_pthreads@
bin_PROGRAMS = @installed_util_list@
INCLUDES = -I$(top_srcdir)/src/sequence   \
           -I$(top_srcdir)/src/database   \
           -I$(top_srcdir)/src/struct     \
           -I$(top_srcdir)/src/comparison \
           -I$(top_srcdir)/src/general

LDADD = $(top_srcdir)/src/sequence/sequence.o    \
        $(top_srcdir)/src/sequence/alphabet.o    \
        $(top_srcdir)/src/sequence/splice.o      \
        $(top_srcdir)/src/sequence/translate.o   \
        $(top_srcdir)/src/database/fastadb.o     \
        $(top_srcdir)/src/general/argument.o     \
        $(top_srcdir)/src/general/compoundfile.o \
        $(top_srcdir)/src/general/lineparse.o    \
        $(top_srcdir)/src/struct/sparsecache.o   \
        $(top_srcdir)/src/struct/matrix.o        \
        -lm

fastaclean_SOURCES = fastaclean.c
fastaclip_SOURCES = fastaclip.c
fastachecksum_SOURCES = fastachecksum.c
fastacomposition_SOURCES = fastacomposition.c
fastadiff_SOURCES = fastadiff.c
fastaexplode_SOURCES = fastaexplode.c
fastafetch_SOURCES = fastafetch.c
fastahardmask_SOURCES = fastahardmask.c
fastaindex_SOURCES = fastaindex.c
fastalength_SOURCES = fastalength.c
fastanrdb_SOURCES = fastanrdb.c
fastaoverlap_SOURCES = fastaoverlap.c
fastareformat_SOURCES = fastareformat.c
fastaremove_SOURCES = fastaremove.c
fastarevcomp_SOURCES = fastarevcomp.c
fastasoftmask_SOURCES = fastasoftmask.c
fastasort_SOURCES = fastasort.c
fastasplit_SOURCES = fastasplit.c
fastasubseq_SOURCES = fastasubseq.c
fastatranslate_SOURCES = fastatranslate.c
fasta2esd_SOURCES = fasta2esd.c
fastaannotatecdna_SOURCES = fastaannotatecdna.c
esd2esi_SOURCES = esd2esi.c
fasta2esd_LDADD = $(top_srcdir)/src/database/dataset.o \
                   $(top_srcdir)/src/struct/bitarray.o  \
                   $(LDADD)

esd2esi_LDADD = $(top_srcdir)/src/database/dataset.o     \
                 $(top_srcdir)/src/database/index.o       \
                 $(top_srcdir)/src/struct/bitarray.o      \
                 $(top_srcdir)/src/struct/vfsm.o          \
                 $(top_srcdir)/src/struct/pqueue.o        \
                 $(top_srcdir)/src/struct/recyclebin.o    \
                 $(top_srcdir)/src/struct/rangetree.o     \
                 $(top_srcdir)/src/struct/noitree.o       \
                 $(top_srcdir)/src/struct/splaytree.o     \
                 $(top_srcdir)/src/sequence/submat.o      \
                 $(top_srcdir)/src/sequence/codonsubmat.o \
                 $(top_srcdir)/src/comparison/wordhood.o  \
                 $(top_srcdir)/src/comparison/hspset.o    \
                 $(top_srcdir)/src/comparison/match.o     \
                 $(LDADD)

EXTRA_fastavalidcds_SOURCES = fastavalidcds.c

# Files to clear away
MAINTAINERCLEANFILES = Makefile.in
all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/util/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/util/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
esd2esi$(EXEEXT): $(esd2esi_OBJECTS) $(esd2esi_DEPENDENCIES) 
	@rm -f esd2esi$(EXEEXT)
	$(LINK) $(esd2esi_OBJECTS) $(esd2esi_LDADD) $(LIBS)
fasta2esd$(EXEEXT): $(fasta2esd_OBJECTS) $(fasta2esd_DEPENDENCIES) 
	@rm -f fasta2esd$(EXEEXT)
	$(LINK) $(fasta2esd_OBJECTS) $(fasta2esd_LDADD) $(LIBS)
fastaannotatecdna$(EXEEXT): $(fastaannotatecdna_OBJECTS) $(fastaannotatecdna_DEPENDENCIES) 
	@rm -f fastaannotatecdna$(EXEEXT)
	$(LINK) $(fastaannotatecdna_OBJECTS) $(fastaannotatecdna_LDADD) $(LIBS)
fastachecksum$(EXEEXT): $(fastachecksum_OBJECTS) $(fastachecksum_DEPENDENCIES) 
	@rm -f fastachecksum$(EXEEXT)
	$(LINK) $(fastachecksum_OBJECTS) $(fastachecksum_LDADD) $(LIBS)
fastaclean$(EXEEXT): $(fastaclean_OBJECTS) $(fastaclean_DEPENDENCIES) 
	@rm -f fastaclean$(EXEEXT)
	$(LINK) $(fastaclean_OBJECTS) $(fastaclean_LDADD) $(LIBS)
fastaclip$(EXEEXT): $(fastaclip_OBJECTS) $(fastaclip_DEPENDENCIES) 
	@rm -f fastaclip$(EXEEXT)
	$(LINK) $(fastaclip_OBJECTS) $(fastaclip_LDADD) $(LIBS)
fastacomposition$(EXEEXT): $(fastacomposition_OBJECTS) $(fastacomposition_DEPENDENCIES) 
	@rm -f fastacomposition$(EXEEXT)
	$(LINK) $(fastacomposition_OBJECTS) $(fastacomposition_LDADD) $(LIBS)
fastadiff$(EXEEXT): $(fastadiff_OBJECTS) $(fastadiff_DEPENDENCIES) 
	@rm -f fastadiff$(EXEEXT)
	$(LINK) $(fastadiff_OBJECTS) $(fastadiff_LDADD) $(LIBS)
fastaexplode$(EXEEXT): $(fastaexplode_OBJECTS) $(fastaexplode_DEPENDENCIES) 
	@rm -f fastaexplode$(EXEEXT)
	$(LINK) $(fastaexplode_OBJECTS) $(fastaexplode_LDADD) $(LIBS)
fastafetch$(EXEEXT): $(fastafetch_OBJECTS) $(fastafetch_DEPENDENCIES) 
	@rm -f fastafetch$(EXEEXT)
	$(LINK) $(fastafetch_OBJECTS) $(fastafetch_LDADD) $(LIBS)
fastahardmask$(EXEEXT): $(fastahardmask_OBJECTS) $(fastahardmask_DEPENDENCIES) 
	@rm -f fastahardmask$(EXEEXT)
	$(LINK) $(fastahardmask_OBJECTS) $(fastahardmask_LDADD) $(LIBS)
fastaindex$(EXEEXT): $(fastaindex_OBJECTS) $(fastaindex_DEPENDENCIES) 
	@rm -f fastaindex$(EXEEXT)
	$(LINK) $(fastaindex_OBJECTS) $(fastaindex_LDADD) $(LIBS)
fastalength$(EXEEXT): $(fastalength_OBJECTS) $(fastalength_DEPENDENCIES) 
	@rm -f fastalength$(EXEEXT)
	$(LINK) $(fastalength_OBJECTS) $(fastalength_LDADD) $(LIBS)
fastanrdb$(EXEEXT): $(fastanrdb_OBJECTS) $(fastanrdb_DEPENDENCIES) 
	@rm -f fastanrdb$(EXEEXT)
	$(LINK) $(fastanrdb_OBJECTS) $(fastanrdb_LDADD) $(LIBS)
fastaoverlap$(EXEEXT): $(fastaoverlap_OBJECTS) $(fastaoverlap_DEPENDENCIES) 
	@rm -f fastaoverlap$(EXEEXT)
	$(LINK) $(fastaoverlap_OBJECTS) $(fastaoverlap_LDADD) $(LIBS)
fastareformat$(EXEEXT): $(fastareformat_OBJECTS) $(fastareformat_DEPENDENCIES) 
	@rm -f fastareformat$(EXEEXT)
	$(LINK) $(fastareformat_OBJECTS) $(fastareformat_LDADD) $(LIBS)
fastaremove$(EXEEXT): $(fastaremove_OBJECTS) $(fastaremove_DEPENDENCIES) 
	@rm -f fastaremove$(EXEEXT)
	$(LINK) $(fastaremove_OBJECTS) $(fastaremove_LDADD) $(LIBS)
fastarevcomp$(EXEEXT): $(fastarevcomp_OBJECTS) $(fastarevcomp_DEPENDENCIES) 
	@rm -f fastarevcomp$(EXEEXT)
	$(LINK) $(fastarevcomp_OBJECTS) $(fastarevcomp_LDADD) $(LIBS)
fastasoftmask$(EXEEXT): $(fastasoftmask_OBJECTS) $(fastasoftmask_DEPENDENCIES) 
	@rm -f fastasoftmask$(EXEEXT)
	$(LINK) $(fastasoftmask_OBJECTS) $(fastasoftmask_LDADD) $(LIBS)
fastasort$(EXEEXT): $(fastasort_OBJECTS) $(fastasort_DEPENDENCIES) 
	@rm -f fastasort$(EXEEXT)
	$(LINK) $(fastasort_OBJECTS) $(fastasort_LDADD) $(LIBS)
fastasplit$(EXEEXT): $(fastasplit_OBJECTS) $(fastasplit_DEPENDENCIES) 
	@rm -f fastasplit$(EXEEXT)
	$(LINK) $(fastasplit_OBJECTS) $(fastasplit_LDADD) $(LIBS)
fastasubseq$(EXEEXT): $(fastasubseq_OBJECTS) $(fastasubseq_DEPENDENCIES) 
	@rm -f fastasubseq$(EXEEXT)
	$(LINK) $(fastasubseq_OBJECTS) $(fastasubseq_LDADD) $(LIBS)
fastatranslate$(EXEEXT): $(fastatranslate_OBJECTS) $(fastatranslate_DEPENDENCIES) 
	@rm -f fastatranslate$(EXEEXT)
	$(LINK) $(fastatranslate_OBJECTS) $(fastatranslate_LDADD) $(LIBS)
fastavalidcds$(EXEEXT): $(fastavalidcds_OBJECTS) $(fastavalidcds_DEPENDENCIES) 
	@rm -f fastavalidcds$(EXEEXT)
	$(LINK) $(fastavalidcds_OBJECTS) $(fastavalidcds_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/esd2esi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fasta2esd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fastaannotatecdna.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fastachecksum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fastaclean.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fastaclip.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fastacomposition.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fastadiff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fastaexplode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fastafetch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fastahardmask.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fastaindex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fastalength.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fastanrdb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fastaoverlap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fastareformat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fastaremove.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fastarevcomp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fastasoftmask.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fastasort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fastasplit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fastasubseq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fastatranslate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fastavalidcds.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
